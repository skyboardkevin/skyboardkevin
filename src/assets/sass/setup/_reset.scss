//
// = CSS Default Setup
//
// @package: SassTrend
// @version: 1.0
//
// ------------------------------------------------------------------------- */

body {
  font-size: 16px;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: $font-body;
  color: $color-primary;
  font-weight: 400;
}
input{
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
a:hover,
a:focus,
input:focus,
input:hover,
select:focus,
select:hover,
select:active,
textarea:focus,
textarea:hover,
button:focus {
  outline: none;
}

a {
  color: $color-primary;
  @include transition(all 0.3 linear);
  &:hover,
  &:focus {
    color: $color-primary;
    text-decoration: none;
    outline: none;
  }
}
button, input, optgroup, select, textarea {
  font-family: $font-body;
  font-weight: 300;
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: $font-title;
  font-weight: 400;
  color: $color-title;
  line-height: 1.6;
  small {
    font-size: 65%;
  }

  strong,
  b {
    font-weight: 700;
  }

  a {
    color: $color-title;

    &:hover {
      color: $color-primary;
    }
  }
}
code {
  background-color: #f5f2f0;
  padding: .2rem .4rem;
}
blockquote {
  border-left-width: 2px;
  margin-bottom: 25px;
  margin-left: 45px;
  margin-top: 25px;
  padding-bottom: 0;
  padding-top: 0;
  position: relative;
}
dl {
  margin-bottom: 1.6em;
}
dt {
  font-weight: bold;
}
dd {
  margin-bottom: 1.6em;
}
table,
th,
td {
  border: 1px solid #eaeaea;
  border: 1px solid rgba(51, 51, 51, 0.1);
}
table {
  border-collapse: separate;
  border-spacing: 0;
  border-width: 1px 0 0 1px;
  margin: 0 0 1.6em;
  table-layout: fixed; /* Prevents HTML tables from becoming too wide */
  width: 100%;
}
caption,
th,
td {
  font-weight: normal;
  text-align: left;
}
th {
  border-width: 0 1px 1px 0;
  font-weight: 700;
}
td {
  border-width: 0 1px 1px 0;
}
th, td {
  padding: 0.4em;
}
img {
  -ms-interpolation-mode: bicubic;
  border: 0;
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}
iframe {
  width: 100%;
}
h1,
.h1 {
  font-size: 2.75em;
  line-height: 1.4em;
  margin-bottom: 20px;
}
h2,
.h2 {
  font-size: 1.9em;
  line-height: 1.4;
  margin-bottom: 15px;
}
h3,
.h3 {
  @include font-size(18);
}
h4,
.h4 {
  font-size: 1.1em;
}
h5,
.h5 {
  @include font-size(16);
  margin-bottom: 10px;
}
h6, .h6 {
  @include font-size(15);
}
.text-strong {
  font-weight: 700;
}
input[type="text"],
input[type="email"],
input[type="password"],
input[type="url"],
input[type="tel"],
input[type="time"],
input[type="date"],
input[type="search"],
textarea {
  background-color: $color-polar;
  width: 100%;
  border: none;
  border: 1px solid rgba(30, 67, 221, 0.09);
  padding: 14px 25px;
  @include font-size(14);
  border-radius: 3px;
  box-shadow: 0 3px 30px rgba($color-black, 0.02);
  @include transition();
}
input[type="submit"] {
  background-color: $color-aqua;
  color: $color-white;
  font-weight: 600;
  border: none;
  padding: 14px 25px;
  margin: 0;
  cursor: pointer;
  border-radius: 3px;
  box-shadow: 0 3px 30px rgba($color-black, 0.16);
  display: inline-block;
}
.st-body-font {
  font-family: $font-body;;
}
.st-title-font {
  font-family: $font-title;
}
.st-position-wrap {
  position: relative;
  overflow: hidden;
  z-index: 1;
}
.min-height-mobile {
  min-height: 750px !important;
}

.st-fonts-poppins {
  font-family: $font-body;;
}
.st-fonts-oxygen {
  font-family: $font-title;
}
// bootstrap extended
.font-weight-medium {
  font-weight: 500;
}
.font-weight-semi-bold {
  font-weight: 600;
}
.font-weight-extra-bold {
  font-weight: 800;
}
.st_border_bottom {
  border-bottom: 1px solid rgba(0,0,0,0.1);
}

.st_before_none {
  &::before {
    display: none !important;
  }
}
.st_after_none {
  &::after {
    display: none !important;
  }
}
.bg-none {
  background: none !important;
}
.bgc-none {
  background-color: transparent !important;
}
.bgi-none {
  background-image: none !important;
}
.br-none {
  br {
    display: none !important;
  }
}

// background size reset classes
@each $name, $size in $bg-size {
  .bg-size-#{$name} {
    background-size: $size !important;
  }
}
// background attachment reset classes
@each $name, $attachment in $bg-attachment {
  .bg-attachment-#{$name} {
    background-attachment: $attachment !important;
  }
}
// background repeat reset classes
@each $name, $repeat in $bg-repeat {
  .bg-repeat-#{$name} {
    background-repeat: $repeat !important;
  }
}
// background position reset classes
@each $name, $position in $bg-position {
  .bg-position-#{$name} {
    background-position: $position !important;
  }
}
// background overflow reset classes
@each $name, $value in $overflow {
  .st-overflow-#{$name} {
    overflow: $value !important;
  }
  .st-overflow-x-#{$name} {
    overflow-x: $value !important;
  }
  .st-overflow-y-#{$name} {
    overflow-y: $value !important;
  }
}

@each $lineheight in $lineheights {
  $height: str-replace($lineheight, '-', '.');
  .st-line-height-#{$lineheight} {
    line-height: #{$height} !important;
  }
}

.st-width-full {
  width: 100% !important;
}
.word-break-normal {
  -ms-word-break: normal !important;
  word-break: normal !important;
}

$cols: 12;
$columns: 12;
@include media-max(XS) {
  @for $i from 1 through $cols {
    .col-xs-#{$i} {
      -ms-flex: 0 0 percentage($i / $columns);
      flex: 0 0 percentage($i / $columns);
      max-width: percentage($i / $columns);
    }
  }
  @each $display in $displays {
    .d-xs-#{$display} {
      display: $display !important;
    }
  }
}
@for $i from 1 through $cols {
  .st-zindex-#{$i} {
    z-index: $i !important;
  }
}

@each $size, $lineheight in $font_sizes {
  .st-font-#{$size} {
    @include font-size($size);
    @if $lineheight != 'null' {
      line-height: $lineheight;
    }
  }
}

[data-overlay] {
  position: relative;
}
[data-overlay]:before {
  position: absolute;
  content: '';
  background: #1f1e1e;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 0;
}

$i : 0;
@while $i <= 1 {

  [data-overlay="#{round($i*10)}"]::before {
    opacity: $i;
  }
  .st-opacity-#{round($i*10)} {
    opacity: $i;
  }
  
  $i : $i + 0.1;
}


@each $percent in $wlists {
  $width: strip-units($percent);
  .st-width-#{$width} {
    width: $percent !important;
  }
}
.st-side-auto {
  margin-right: auto;
  margin-left: auto;
}
.st-min-1150 {
  min-height: 1150px !important;
}
.st-min-1000 {
  min-height: 1000px !important;
}
.st-min-900 {
  min-height: 900px !important;
}
.st-min-850 {
  min-height: 850px !important;
}
.st-min-650 {
  min-height: 650px !important;
}

@each $breakpoint in $breakpoints {
  @include media-max(to-upper-case($breakpoint)) {
    @each $size, $lineheight in $font_sizes {
      .st-font-#{$breakpoint}-#{$size} {
        @include font-size($size);
        @if $lineheight != 'null' {
          line-height: $lineheight;
        }
      }
      .st-lineheight-#{$breakpoint}-#{$size} {
        line-height: #{$size}px;
      }
    }
    @each $align in $alignments {
      .st-text-#{$breakpoint}-#{$align} {
        text-align: $align !important;
      }
    }
    .st-min-#{$breakpoint}-1150 {
      min-height: 1150px !important;
    }
    .st-min-#{$breakpoint}-1000 {
      min-height: 1000px !important;
    }
    .st-min-#{$breakpoint}-900 {
      min-height: 900px !important;
    }
    .st-min-#{$breakpoint}-850 {
      min-height: 850px !important;
    }
    .st-min-#{$breakpoint}-650 {
      min-height: 650px !important;
    }
    .st-min-#{$breakpoint}-auto {
      min-height: auto !important;
      height: auto !important;
    }
    .st-height-#{$breakpoint}-inherit {
      height: auto !important;
      min-height: inherit !important;
      max-height: inherit !important;
    }
    .st-d-#{$breakpoint}-none {
      display: none !important;
    }
    .st-d-#{$breakpoint}-block {
      display: block !important;
    }
    .st_before-#{$breakpoint}-none {
      &::before {
        display: none !important;
      }
    }
    .st_after-#{$breakpoint}-none {
      &::after {
        display: none !important;
      }
    }
    @each $percent in $wlists {
      $width: strip-units($percent);
      .st-width-#{$breakpoint}-#{$width} {
        width: $percent !important;
      }
    }
    @each $align in $aligns {
      .st-align-items-#{$breakpoint}-#{$align} {
        -ms-flex-align: $align !important;
        align-items: $align !important;
      }
      .st-justify-content-#{$breakpoint}-#{$align} {
        -ms-flex-pack: $align !important;
        justify-content: $align !important;
      }
    }
    // background size reset classes
    @each $name, $size in $bg-size {
      .bg-size-#{$breakpoint}-#{$name} {
        background-size: $size !important;
      }
    }
    // background attachment reset classes
    @each $name, $attachment in $bg-attachment {
      .bg-attachment-#{$breakpoint}-#{$name} {
        background-attachment: $attachment !important;
      }
    }
    // background repeat reset classes
    @each $name, $repeat in $bg-repeat {
      .bg-repeat-#{$breakpoint}-#{$name} {
        background-repeat: $repeat !important;
      }
    }
    // background position reset classes
    @each $name, $position in $bg-position {
      .bg-position-#{$breakpoint}-#{$name} {
        background-position: $position !important;
      }
    }
    // background overflow reset classes
    @each $name, $value in $overflow {
      .st-overflow-#{$breakpoint}-#{$name} {
        overflow: $value !important;
      }
      .st-overflow-x-#{$breakpoint}-#{$name} {
        overflow-x: $value !important;
      }
      .st-overflow-y-#{$breakpoint}-#{$name} {
        overflow-y: $value !important;
      }
    }
    // linehight
    @each $lineheight in $lineheights {
      $height: str-replace($lineheight, '-', '.');
      .st-line-height-#{$breakpoint}-#{$lineheight} {
        line-height: #{$height} !important;
      }
    }
    .st-side-#{$breakpoint}-auto {
      margin-right: auto;
      margin-left: auto;
    }
  }
}



@media screen and (-webkit-min-device-pixel-ratio:0) {
    .tilt-wrapper {
        -webkit-transform: translate3d(0,0,0);
    }
}